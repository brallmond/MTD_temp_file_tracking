Hi, I'm chippy, your SCA chip! My chip ID is 0x4673! I'm gonna run some tests now...
[92m########## TEST 0 ##########
Name: <function test_read_ID at 0x7fa093c0a378> [0m
send connect!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x6 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x6 : 0x9000000
enabling ADC
enabling channel ENADC through register CRD
write 0x10 to control register CRD!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x6 : 0x10000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x6 : 0x9000000
read ID!
	--Sent (tx)
	 ch : leng : com : data
	 0x14 : 0x4 : 0xd1 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x4 : 0x14 : 0xd1 : 0x4651
checking payload for error flags
[94mNo errors![0m
[92m########## TEST 1 ##########
Name: <function test_write_read_three_registers at 0x7fa093958d90> [0m
send connect!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x6 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x6 : 0x8004600
write 0x1f to control register CRB!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x2 : 0x1f000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x2 : 0x8004600
read control register CRB!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x3 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x3 : 0x1f000000
write 0x12 to control register CRC!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x4 : 0x12000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x4 : 0x1f000000
read control register CRC!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x5 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x5 : 0x10000000
write 0x8e to control register CRD!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x6 : 0x8e000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x6 : 0x10000000
read control register CRD!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x7 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x7 : 0x8e000000
checking payload for error flags
[94mNo errors![0m
[92m########## TEST 2 ##########
Name: <function test_GPIO_write_read at 0x7fa09396f730> [0m
send connect!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x6 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x6 : 0x88000000
enabling GPIO
enabling channel ENGPIO through register CRB
write 0x4 to control register CRB!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x2 : 0x4000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x2 : 0x0
write 17 to GPIO!
	--Sent (tx)
	 ch : leng : com : data
	 0x2 : 0x4 : 0x10 : 0x11
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x0 : 0x2 : 0x10 : 0x0
read GPIO!
	--Sent (tx)
	 ch : leng : com : data
	 0x2 : 0x1 : 0x11 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x4 : 0x2 : 0x11 : 0x0
checking payload for error flags
[94mNo errors![0m
[92m########## TEST 3 ##########
Name: <function test_I2C_full at 0x7fa09396f8c8> [0m
enabling I2C channel 0
enabling channel ENI2C0 through register CRB
write 0x8 to control register CRB!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x2 : 0x8000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x2 : 0x8e000000
configuring I2C channel to 1 bytes at frequency 400kHz
writing to control register of I2C channel 0!
data is: 100663296 or 0b110000000000000000000000000 aka 0x6000000
	--Sent (tx)
	 ch : leng : com : data
	 0x3 : 0x4 : 0x30 : 0x6000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x0 : 0x3 : 0x30 : 0x1000000
reading control register of I2C channel 0!
	--Sent (tx)
	 ch : leng : com : data
	 0x3 : 0x4 : 0x31 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x4 : 0x3 : 0x31 : 0x0
checking payload for error flags
[94mNo errors![0m
enabling I2C channel 1
enabling channel ENI2C1 through register CRB
write 0x10 to control register CRB!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x2 : 0x10000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x2 : 0x8c000000
configuring I2C channel to 1 bytes at frequency 400kHz
writing to control register of I2C channel 1!
data is: 100663296 or 0b110000000000000000000000000 aka 0x6000000
	--Sent (tx)
	 ch : leng : com : data
	 0x4 : 0x4 : 0x30 : 0x6000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x0 : 0x4 : 0x30 : 0x0
reading control register of I2C channel 1!
	--Sent (tx)
	 ch : leng : com : data
	 0x4 : 0x4 : 0x31 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x4 : 0x4 : 0x31 : 0x6000000
checking payload for error flags
[94mNo errors![0m
enabling I2C channel 15
enabling channel ENI2CF through register CRD
write 0x4 to control register CRD!
	--Sent (tx)
	 ch : leng : com : data
	 0x0 : 0x4 : 0x6 : 0x4000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x2 : 0x0 : 0x6 : 0x8e000000
configuring I2C channel to 1 bytes at frequency 400kHz
writing to control register of I2C channel 15!
data is: 100663296 or 0b110000000000000000000000000 aka 0x6000000
	--Sent (tx)
	 ch : leng : com : data
	 0x12 : 0x4 : 0x30 : 0x6000000
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x0 : 0x12 : 0x30 : 0x0
reading control register of I2C channel 15!
	--Sent (tx)
	 ch : leng : com : data
	 0x12 : 0x4 : 0x31 : 0x0
	--Received (rx)
	 err : leng : ch : Tr.ID : data
	 0x0 : 0x4 : 0x12 : 0x31 : 0x0
checking payload for error flags
[94mNo errors![0m
